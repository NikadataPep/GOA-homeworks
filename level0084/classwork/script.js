function similarity(a, b) {
  //// ერთნაირი ელემენტები
  let similar = 0;

  //// განსხვავებული ელემენტები
  let unique = 0;

  //// ცვლადი ბოლო ელემენტისთვის
  let lastElem = null;

  let i = 0;
  let j = 0;

  /// ლუპი იმუშავებს სანამ ელემენტების რაოდენობა არ დამთავრდება რომელიმე ერეიში

  while (i < a.length || j < b.length) {
    let val; /// ახლანდელი ელემენტი

    //// თუ b მასივის ყველა ელემენტს გადავუყევით ან a-ს ახლანდელი ელემენტი ნაკლებია b-ზე
    if (j >= b.length || (i < a.length && a[i] < b[j])) {
      val = a[i++]; //<> მივწვდეთ a-ს შემდეგ ელემენტს
    }
    //// თუ a მასივის ყველა ელემენტს გადავუყევით ან b-ს ახლანდელი ელემენტი ნაკლებია a-ზე
    else if (i >= a.length || (j < b.length && a[i] > b[j])) {
      val = b[j++]; //<> მივწვდეთ b-ს შემდეგ ელემენტს
    }
    //// თუ ორივე ელემენტი ერთმანეთს უდრის
    else {
      (val = a[i++]), j++, similar++; //// თუ მსგავსებია ორივე ცვლადი გავზარდოთ ერთით
    }

    //\ თუ ახლანდელი ელემენტი არ არის ბოლო ელემენტის მსგავსი
    if (val !== lastElem) {
      unique++; //\ გავზარდოთ უნიკალური ელემენტები რაოდენობა ერთით
    }

    lastElem = val;
  }

  return similar / unique;
}
